
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALTERNATIVE_SYMBOL CLOSE_PARENTHESIS CLOSE_SQUARE_BRACKET COMMENT GRAMMAR_SYMBOL IDENTIFIER MACRO_SYMBOL NT_SYMBOL OPEN_PARENTHESIS OPEN_SQUARE_BRACKET REPETITION_SYMBOL STRICT_SYMBOL TOKEN_SYMBOL T_SYMBOL\n    grammar_list : comment_block\n    grammar_list : grammar_list grammar_expression\n    grammar_list : grammar_list token_expression\n    grammar_list : grammar_list strict_expression\n    grammar_list : grammar_list macro_expression\n    \n    comment_block : COMMENT\n    comment_block : comment_block COMMENT\n    \n    grammar_expression : NT_SYMBOL GRAMMAR_SYMBOL productions_list\n    \n    token_expression : NT_SYMBOL GRAMMAR_SYMBOL productions_list\n    \n    strict_expression : NT_SYMBOL GRAMMAR_SYMBOL productions_list\n    \n    macro_expression : NT_SYMBOL GRAMMAR_SYMBOL productions_list\n    \n    productions_list : production\n    productions_list : productions_list ALTERNATIVE_SYMBOL production\n    \n    production : NT_SYMBOL\n    production : T_SYMBOL\n    production : production NT_SYMBOL\n    production : production T_SYMBOL\n    '
    
_lr_action_items = {'COMMENT':([0,2,3,9,],[3,9,-6,-7,]),'$end':([1,2,3,4,5,6,7,9,11,12,13,14,16,17,18,],[0,-1,-6,-2,-3,-4,-5,-7,-14,-8,-12,-15,-16,-17,-13,]),'NT_SYMBOL':([1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,],[8,-1,-6,-2,-3,-4,-5,-7,11,-14,-8,16,-15,11,-16,-17,16,]),'GRAMMAR_SYMBOL':([8,],[10,]),'T_SYMBOL':([10,11,13,14,15,16,17,18,],[14,-14,17,-15,14,-16,-17,17,]),'ALTERNATIVE_SYMBOL':([11,12,13,14,16,17,18,],[-14,15,-12,-15,-16,-17,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'grammar_list':([0,],[1,]),'comment_block':([0,],[2,]),'grammar_expression':([1,],[4,]),'token_expression':([1,],[5,]),'strict_expression':([1,],[6,]),'macro_expression':([1,],[7,]),'productions_list':([10,],[12,]),'production':([10,15,],[13,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> grammar_list","S'",1,None,None,None),
  ('grammar_list -> comment_block','grammar_list',1,'p_grammar_list','yacc.py',44),
  ('grammar_list -> grammar_list grammar_expression','grammar_list',2,'p_grammar_list','yacc.py',45),
  ('grammar_list -> grammar_list token_expression','grammar_list',2,'p_grammar_list','yacc.py',46),
  ('grammar_list -> grammar_list strict_expression','grammar_list',2,'p_grammar_list','yacc.py',47),
  ('grammar_list -> grammar_list macro_expression','grammar_list',2,'p_grammar_list','yacc.py',48),
  ('comment_block -> COMMENT','comment_block',1,'p_comment_block','yacc.py',58),
  ('comment_block -> comment_block COMMENT','comment_block',2,'p_comment_block','yacc.py',59),
  ('grammar_expression -> NT_SYMBOL GRAMMAR_SYMBOL productions_list','grammar_expression',3,'p_grammar_expression','yacc.py',71),
  ('token_expression -> NT_SYMBOL GRAMMAR_SYMBOL productions_list','token_expression',3,'p_token_expression','yacc.py',77),
  ('strict_expression -> NT_SYMBOL GRAMMAR_SYMBOL productions_list','strict_expression',3,'p_strict_expression','yacc.py',83),
  ('macro_expression -> NT_SYMBOL GRAMMAR_SYMBOL productions_list','macro_expression',3,'p_macro_expression','yacc.py',89),
  ('productions_list -> production','productions_list',1,'p_productions_list','yacc.py',95),
  ('productions_list -> productions_list ALTERNATIVE_SYMBOL production','productions_list',3,'p_productions_list','yacc.py',96),
  ('production -> NT_SYMBOL','production',1,'p_production','yacc.py',106),
  ('production -> T_SYMBOL','production',1,'p_production','yacc.py',107),
  ('production -> production NT_SYMBOL','production',2,'p_production','yacc.py',108),
  ('production -> production T_SYMBOL','production',2,'p_production','yacc.py',109),
]
